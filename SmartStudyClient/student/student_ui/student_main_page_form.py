# Form implementation generated from reading ui file 'student_main_page.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets

class Ui_student_main_page(object):
    def __init__(self, static):
        super().__init__()
        self.static = static
        self.data = {}

    def screen_size(self, teacher_main_page):
        screen_geometry = QtWidgets.QApplication.primaryScreen().availableGeometry()
        width = screen_geometry.width()
        height = screen_geometry.height()
        if width >= self.static["window-size"]["width"] and height >= self.static["window-size"]["height"]:
            teacher_main_page.setMinimumSize(QtCore.QSize(self.static["window-size"]["width"], self.static["window-size"]["height"]))
            qr=teacher_main_page.frameGeometry()           
            cp=QtGui.QGuiApplication.primaryScreen().availableGeometry().center()
            qr.moveCenter(cp)
            teacher_main_page.move(qr.topLeft())
        else:
            teacher_main_page.setMinimumSize(QtCore.QSize(width, height))
            qr=teacher_main_page.frameGeometry()           
            cp=QtGui.QGuiApplication.primaryScreen().availableGeometry().center()
            qr.moveCenter(cp)
            teacher_main_page.move(qr.topLeft())

    def topics(self, student_main_page):                
        _translate = QtCore.QCoreApplication.translate
        font = QtGui.QFont()
        font.setPointSize(self.static["font-sizes"]["title"])
        self.menu_label.setFont(font)
        font = QtGui.QFont()
        font.setPointSize(self.static["font-sizes"]["size-menu"])
        self.font_size_combo_box.setFont(font)
        self.logout_cmd_link_btn.setMinimumSize(QtCore.QSize(self.static["menu"]["backtrack-width"], 45))
        self.logout_cmd_link_btn.setMaximumSize(QtCore.QSize(self.static["menu"]["backtrack-width"], 45))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(self.static["font-sizes"]["text"])
        self.logout_cmd_link_btn.setFont(font)
        self.menu_horizontal_layout.setContentsMargins(self.static["menu"]["layout"]["left"], self.static["menu"]["layout"]["top"], self.static["menu"]["layout"]["right"], self.static["menu"]["layout"]["bottom"])
        self.menu_horizontal_layout.setSpacing(self.static["menu"]["layout"]["spacing"])
        font = QtGui.QFont()
        font.setPointSize(self.static["font-sizes"]["subtitle"])
        self.name_label.setFont(font)
        self.name_label.setStyleSheet(f"margin-left:{self.static["subtitle-margin-left"]}px;margin-top:10px; margin-bottom:10px;")
        self.student_main_page_vertical_layout.setSpacing(self.static["layout-spacing"])

        if self.data == {}:
            return
        self.student_main_page_vertical_layout.removeWidget(self.tabWidget)

        self.tabWidget = QtWidgets.QTabWidget(parent=student_main_page)        
        font = QtGui.QFont()
        font.setPointSize(self.static["font-sizes"]["subtitle"])
        self.tabWidget.setFont(font)
        self.tabWidget.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.tabWidget.setStyleSheet("background-color:#83cbeb")
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setObjectName("tabWidget")

        index1 = 0
        for course in self.data:
            index1+=1
            tab = QtWidgets.QWidget()
            tab.setObjectName(f"tab_{index1}")
            verticalLayout = QtWidgets.QVBoxLayout(tab)
            verticalLayout.setContentsMargins(0, 0, 0, 0)
            verticalLayout.setSpacing(0)
            verticalLayout.setObjectName(f"verticalLayout_{index1}")

            topic_list_scroll_area = QtWidgets.QScrollArea(parent=tab)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
            sizePolicy.setHeightForWidth(topic_list_scroll_area.sizePolicy().hasHeightForWidth())
            topic_list_scroll_area.setSizePolicy(sizePolicy)
            palette = QtGui.QPalette()
            brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
            brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
            palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Button, brush)
            brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
            brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
            palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Base, brush)
            brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
            brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
            palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Window, brush)
            brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
            brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
            palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Button, brush)
            brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
            brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
            palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Base, brush)
            brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
            brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
            palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Window, brush)
            brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
            brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
            palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Button, brush)
            brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
            brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
            palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Base, brush)
            brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
            brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
            palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Window, brush)
            topic_list_scroll_area.setPalette(palette)
            topic_list_scroll_area.setStyleSheet("border:none; background-color:#83cbeb")
            topic_list_scroll_area.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAsNeeded)
            topic_list_scroll_area.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
            topic_list_scroll_area.setWidgetResizable(True)
            topic_list_scroll_area.setObjectName(f"topic_list_scroll_area_{index1}")
            topic_list_scroll_area_contents = QtWidgets.QWidget()
            topic_list_scroll_area_contents.setGeometry(QtCore.QRect(0, 0, 862, 316))
            topic_list_scroll_area_contents.setObjectName(f"topic_list_scroll_area_contents_{index1}")
            topic_list_scroll_area_horizontal_layout = QtWidgets.QHBoxLayout(topic_list_scroll_area_contents)
            topic_list_scroll_area_horizontal_layout.setContentsMargins(0, 0, 0, 0)
            topic_list_scroll_area_horizontal_layout.setSpacing(0)
            topic_list_scroll_area_horizontal_layout.setObjectName(f"topic_list_scroll_area_horizontal_layout_{index1}")
            topic_list_scroll_area_horizontal_layout.setAlignment(QtCore.Qt.AlignmentFlag.AlignHCenter|QtCore.Qt.AlignmentFlag.AlignTop)

            maximum_length = 0
            for key, lines in course.items():
                if key != "id":
                    for line in lines:
                        current_length = (len(line["topic_name"])+len(line["description"]))*self.static["font-sizes"]["text"]*0.59
                        if current_length>maximum_length:
                            maximum_length = current_length
            maximum_length = int(maximum_length+(self.static["menu"]["layout"]["left"]+self.static["menu"]["layout"]["right"]+15+155)*0.59)#
            maximum_size = student_main_page.size().width()
            if maximum_length > maximum_size:
                maximum_length = maximum_size-40

            topic_group_box = QtWidgets.QGroupBox(parent=topic_list_scroll_area_contents)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.Maximum)
            topic_group_box.setMinimumSize(QtCore.QSize(maximum_length, self.static["topic"]["height"]))
            topic_group_box.setSizePolicy(sizePolicy)
            topic_group_box.setTitle("")
            topic_group_box.setObjectName(f"topic_group_box_{index1}")

            topic_grid_layout = QtWidgets.QGridLayout(topic_group_box)
            topic_grid_layout.setContentsMargins(self.static["menu"]["layout"]["left"], self.static["menu"]["layout"]["top"], self.static["menu"]["layout"]["right"], self.static["menu"]["layout"]["bottom"])
            topic_grid_layout.setSpacing(5)
            topic_grid_layout.setObjectName(f"topic_grid_layout_{index1}")

            test_result_label = QtWidgets.QLabel("Teszt eredm√©ny", parent=topic_group_box)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Preferred)
            sizePolicy.setHeightForWidth(test_result_label.sizePolicy().hasHeightForWidth())
            test_result_label.setSizePolicy(sizePolicy)
            test_result_label.setMinimumSize(QtCore.QSize(75, 35))
            font = QtGui.QFont()
            font.setPointSize(self.static["font-sizes"]["text"])
            test_result_label.setFont(font)
            test_result_label.setStyleSheet("")
            test_result_label.setObjectName(f"test_result_label_{index1}")
            topic_grid_layout.addWidget(test_result_label, 0, 2, 1, 2, QtCore.Qt.AlignmentFlag.AlignVCenter)
            
            for key, lines in course.items():
                index2 = 0              
                if key != "id":
                    for line in lines:
                        index2+=1
                        topic_title_btn = QtWidgets.QPushButton(line["topic_name"], parent=topic_group_box)
                        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
                        sizePolicy.setHeightForWidth(topic_title_btn.sizePolicy().hasHeightForWidth())
                        topic_title_btn.setSizePolicy(sizePolicy)
                        topic_title_btn.setMinimumHeight(self.static["topic"]["height"])
                        font = QtGui.QFont()
                        font.setPointSize(self.static["font-sizes"]["text"])
                        topic_title_btn.setFont(font)
                        topic_title_btn.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
                        topic_title_btn.setStyleSheet("QPushButton {background-color: #D9F2D0; border: 2px solid black; border-radius:10; padding-left:20px;padding-right:20px;}\n"
                                                        "QPushButton:hover {background-color: #55aa00; border: 2px solid black; border-radius:10; padding-left:20px;padding-right:20px;}")
                        topic_title_btn.setObjectName(f"topic_title_btn_{course["id"]}_{line['id']}")
                        topic_grid_layout.addWidget(topic_title_btn, index2, 0, 1, 1, QtCore.Qt.AlignmentFlag.AlignVCenter)
                        topic_title_btn.clicked.connect(student_main_page.get_subtopics)

                        topic_desc_label = QtWidgets.QLabel(line["description"], parent=topic_group_box)
                        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Minimum)
                        topic_desc_label.setMinimumHeight(self.static["topic"]["height"])
                        sizePolicy.setHeightForWidth(topic_desc_label.sizePolicy().hasHeightForWidth())
                        topic_desc_label.setSizePolicy(sizePolicy)
                        font = QtGui.QFont()
                        font.setPointSize(self.static["font-sizes"]["text"])
                        topic_desc_label.setFont(font)
                        topic_desc_label.setStyleSheet("background-color: #D9F2D0; border: 2px solid white; border-radius:10; padding-left:20px;padding-right:20px")
                        topic_desc_label.setWordWrap(True)
                        topic_desc_label.setObjectName(f"topic_desc_label_{line["id"]}")
                        topic_grid_layout.addWidget(topic_desc_label, index2, 1, 1, 1, QtCore.Qt.AlignmentFlag.AlignVCenter)

                        finished_icon_label = QtWidgets.QLabel(parent=topic_group_box)
                        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
                        sizePolicy.setHeightForWidth(finished_icon_label.sizePolicy().hasHeightForWidth())
                        finished_icon_label.setSizePolicy(sizePolicy)
                        finished_icon_label.setMinimumSize(QtCore.QSize(self.static["topic"]["height"], self.static["topic"]["height"]))
                        finished_icon_label.setMaximumSize(QtCore.QSize(self.static["topic"]["height"], self.static["topic"]["height"]))
                        finished_icon_label.setStyleSheet("")
                        finished_icon_label.setText("")
                        finished_icon_label.setObjectName(f"finished_icon_label_{line["id"]}")
                        topic_grid_layout.addWidget(finished_icon_label, index2, 2, 1, 1, QtCore.Qt.AlignmentFlag.AlignVCenter)
                        finished_icon_label.setScaledContents(True)
                        num = line["test_task_number"] if line["test_task_number"]!=0 else 1
                        if line["test_required_percentage"]<=round(line["best_correct_answers"]/num*100):
                            finished_icon_label.setPixmap(QtGui.QPixmap("utils/images/ok-icon.png"))                    
                        else:
                            finished_icon_label.setPixmap(QtGui.QPixmap("utils/images/not-ok-icon.png"))

                        test_result_group_box = QtWidgets.QGroupBox(parent=topic_group_box)
                        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.Maximum)
                        sizePolicy.setHeightForWidth(test_result_group_box.sizePolicy().hasHeightForWidth())
                        test_result_group_box.setSizePolicy(sizePolicy)
                        test_result_group_box.setMinimumSize(QtCore.QSize(self.static["topic"]["height"]+10, self.static["topic"]["height"]))
                        test_result_group_box.setMaximumSize(QtCore.QSize(16777215, self.static["topic"]["height"]))
                        test_result_group_box.setTitle("")
                        test_result_group_box.setStyleSheet("background-color: #D9F2D0; border: 2px solid white; border-radius:10")
                        test_result_group_box.setObjectName(f"test_result_group_box_{line["id"]}")
                        result_vertical_layout = QtWidgets.QVBoxLayout(test_result_group_box)
                        result_vertical_layout.setContentsMargins(0, 0, 0, 0)
                        result_vertical_layout.setSpacing(0)
                        result_vertical_layout.setObjectName(f"result_vertical_layout_{line["id"]}")
                        topic_grid_layout.addWidget(test_result_group_box, index2, 3, 1, 1, QtCore.Qt.AlignmentFlag.AlignVCenter)

                        test_task_number_label = QtWidgets.QLabel(f'{line["best_correct_answers"]}/{line["test_task_number"]}', parent=test_result_group_box)
                        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
                        sizePolicy.setHeightForWidth(test_task_number_label.sizePolicy().hasHeightForWidth())
                        test_task_number_label.setSizePolicy(sizePolicy)
                        font = QtGui.QFont()
                        font.setPointSize(self.static["font-sizes"]["text"])
                        test_task_number_label.setFont(font)
                        test_task_number_label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                        test_task_number_label.setObjectName(f"test_task_number_label_{line["id"]}")
                        test_task_number_label.setStyleSheet("border:none;")
                        result_vertical_layout.addWidget(test_task_number_label)

                        num = line["test_task_number"] if line["test_task_number"]!=0 else 1
                        test_percent_label = QtWidgets.QLabel(f'{round(line["best_correct_answers"]/num*100)}/{line["test_required_percentage"]}%', parent=test_result_group_box)
                        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
                        sizePolicy.setHeightForWidth(test_percent_label.sizePolicy().hasHeightForWidth())
                        test_percent_label.setSizePolicy(sizePolicy)
                        font = QtGui.QFont()
                        font.setPointSize(self.static["font-sizes"]["text"])
                        test_percent_label.setFont(font)
                        test_percent_label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                        test_percent_label.setObjectName(f"test_percent_label_{line["id"]}")
                        test_percent_label.setStyleSheet("border:none;")
                        result_vertical_layout.addWidget(test_percent_label)

            topic_list_scroll_area_horizontal_layout.addWidget(topic_group_box)
            topic_list_scroll_area.setWidget(topic_list_scroll_area_contents)
            verticalLayout.addWidget(topic_list_scroll_area)
            self.tabWidget.addTab(tab, "")
            self.tabWidget.setTabText(self.tabWidget.indexOf(tab), _translate("student_main_page", key))

            self.student_main_page_vertical_layout.addWidget(self.tabWidget)
            self.tabWidget.setCurrentIndex(0)
            QtCore.QMetaObject.connectSlotsByName(student_main_page)

    def setupUi(self, student_main_page):
        student_main_page.setObjectName("student_main_page")
        student_main_page.resize(720, 480)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(217, 242, 208))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(217, 242, 208))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(217, 242, 208))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(131, 203, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Window, brush)
        student_main_page.setPalette(palette)
        self.student_main_page_vertical_layout = QtWidgets.QVBoxLayout(student_main_page)
        self.student_main_page_vertical_layout.setContentsMargins(0, 0, 0, 0)
        self.student_main_page_vertical_layout.setSpacing(self.static["layout-spacing"])
        self.student_main_page_vertical_layout.setObjectName("student_main_page_vertical_layout")
        self.menu_group_box = QtWidgets.QGroupBox(parent=student_main_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.menu_group_box.sizePolicy().hasHeightForWidth())
        self.menu_group_box.setSizePolicy(sizePolicy)
        self.menu_group_box.setMinimumSize(QtCore.QSize(0, 50))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Window, brush)
        self.menu_group_box.setPalette(palette)
        self.menu_group_box.setAutoFillBackground(True)
        self.menu_group_box.setStyleSheet("")
        self.menu_group_box.setTitle("")
        self.menu_group_box.setObjectName("menu_group_box")
        self.menu_horizontal_layout = QtWidgets.QHBoxLayout(self.menu_group_box)
        self.menu_horizontal_layout.setContentsMargins(self.static["menu"]["layout"]["left"], self.static["menu"]["layout"]["top"], self.static["menu"]["layout"]["right"], self.static["menu"]["layout"]["bottom"])
        self.menu_horizontal_layout.setSpacing(self.static["menu"]["layout"]["spacing"])
        self.menu_horizontal_layout.setObjectName("menu_horizontal_layout")
        self.menu_label = QtWidgets.QLabel(parent=self.menu_group_box)
        font = QtGui.QFont()
        font.setPointSize(self.static["font-sizes"]["title"])
        self.menu_label.setFont(font)
        self.menu_label.setObjectName("menu_label")
        self.menu_horizontal_layout.addWidget(self.menu_label)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.menu_horizontal_layout.addItem(spacerItem)
        self.font_size_combo_box = QtWidgets.QComboBox(parent=self.menu_group_box)
        self.font_size_combo_box.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setPointSize(self.static["font-sizes"]["text"])
        self.font_size_combo_box.setFont(font)
        self.font_size_combo_box.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.font_size_combo_box.setStyleSheet("")
        self.font_size_combo_box.setSizeAdjustPolicy(QtWidgets.QComboBox.SizeAdjustPolicy.AdjustToContents)
        self.font_size_combo_box.setObjectName("font_size_combo_box")
        self.font_size_combo_box.addItem("")
        self.font_size_combo_box.addItem("")
        self.font_size_combo_box.addItem("")
        self.menu_horizontal_layout.addWidget(self.font_size_combo_box)
        self.logout_cmd_link_btn = QtWidgets.QCommandLinkButton(parent=self.menu_group_box)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.logout_cmd_link_btn.sizePolicy().hasHeightForWidth())
        self.logout_cmd_link_btn.setSizePolicy(sizePolicy)
        self.logout_cmd_link_btn.setMinimumSize(QtCore.QSize(self.static["menu"]["backtrack-width"], 45))
        self.logout_cmd_link_btn.setMaximumSize(QtCore.QSize(self.static["menu"]["backtrack-width"], 45))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(self.static["font-sizes"]["text"])
        self.logout_cmd_link_btn.setFont(font)
        self.logout_cmd_link_btn.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.logout_cmd_link_btn.setObjectName("logout_cmd_link_btn")
        icon = QtGui.QIcon('utils/images/left-arrow.png')           
        self.logout_cmd_link_btn.setIcon(icon)
        self.menu_horizontal_layout.addWidget(self.logout_cmd_link_btn)
        self.student_main_page_vertical_layout.addWidget(self.menu_group_box)
        self.name_label = QtWidgets.QLabel(parent=student_main_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.name_label.sizePolicy().hasHeightForWidth())
        self.name_label.setSizePolicy(sizePolicy)
        self.name_label.setMinimumSize(QtCore.QSize(130, 25))
        font = QtGui.QFont()
        font.setPointSize(self.static["font-sizes"]["subtitle"])
        self.name_label.setFont(font)
        self.name_label.setStyleSheet(f"margin-left:{self.static["subtitle-margin-left"]}px;margin-top:10px; margin-bottom:10px;")
        self.name_label.setObjectName("name_label")
        self.student_main_page_vertical_layout.addWidget(self.name_label)

        self.tabWidget = QtWidgets.QTabWidget(parent=student_main_page)        
        font = QtGui.QFont()
        font.setPointSize(self.static["font-sizes"]["subtitle"])
        self.tabWidget.setFont(font)
        self.tabWidget.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.tabWidget.setStyleSheet("background-color:#83cbeb")
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setObjectName("tabWidget")

        self.student_main_page_vertical_layout.addWidget(self.tabWidget)

        self.retranslateUi(student_main_page)
        match student_main_page.user_settings['font-size']:
            case 'small':
                self.font_size_combo_box.setCurrentIndex(0)
            case 'medium':
                self.font_size_combo_box.setCurrentIndex(1)
            case 'big':
                self.font_size_combo_box.setCurrentIndex(2)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(student_main_page)

    def retranslateUi(self, student_main_page):
        _translate = QtCore.QCoreApplication.translate
        student_main_page.setWindowTitle(_translate("student_main_page", "SmartStudy"))
        self.menu_label.setText(_translate("student_main_page", "Tanul√≥i kezd≈ëlap"))
        self.font_size_combo_box.setItemText(0, _translate("student_main_page", "Kis bet≈±m√©ret"))
        self.font_size_combo_box.setItemText(1, _translate("student_main_page", "K√∂zepes bet≈±m√©ret"))
        self.font_size_combo_box.setItemText(2, _translate("student_main_page", "Nagy bet≈±m√©ret"))
        self.logout_cmd_link_btn.setText(_translate("student_main_page", "Kijelentkez√©s"))
        self.name_label.setText(_translate("student_main_page", student_main_page.name))

